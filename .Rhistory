)
)
)
default_folder = here("WebData")
## Open browser ----
rs_driver_object <-rsDriver(
browser = 'chrome',
chromever ='111.0.5563.64',
port = free_port(),
)
remDr <- rs_driver_object$client
#PRISM Precipitation Bulk Download----
URL = "https://prism.oregonstate.edu/explorer/bulk.php"
remDr$navigate(URL)
#Import Precipitation Stations
file_path <- here("InputData/prism_rr_precip_stations.csv")
file_input <- remDr$findElement(using = "xpath", "//input[@type='file']")
file_input$sendKeysToElement(list(file_path))
#Wait for the file to be selected
Sys.sleep(5)
#Open Locations File
Locations <-remDr$findElement(using = "id", value = "upload_locations")
Locations$clickElement()
#Uncheck Mean temperature checkbox
MeanTemp <- remDr$findElement(using = "id", value = "cvar_tmean")
MeanTemp$clickElement()
#SI Units
Units <-remDr$findElement(using = "id", value = "units_si")
Units$clickElement()
#Interpolate Grid Cell Values
Grid <- remDr$findElement(using = "id", value = "loc_interp")
Grid$clickElement()
#Select Daily Values
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(StartDate$day))
StartMonth <- remDr$findElement(using = "id", value = "tper_daily_start_month")
StartMonth$sendKeysToElement(list(StartDate$month))
StartYear <-remDr$findElement(using = "id", value = "tper_daily_start_year")
StartYear$sendKeysToElement(list(StartDate$year))
EndDay <-remDr$findElement(using = "id", value = "tper_daily_end_day")
EndDay$sendKeysToElement(list(EndDate$day))
EndMonth <-remDr$findElement(using = "id", value = "tper_daily_end_month")
EndMonth$sendKeysToElement(list(EndDate$month))
EndYear <- remDr$findElement(using = "id", value = "tper_daily_end_year")
EndYear$sendKeysToElement(list(EndDate$year))
#SCRIPT LAST UPDATED:
#BY: Payman Alemi
#ON: 3/20/2023
#install packages----
#you should only have to do this once ever on your computer; then comment
#out this portion of the script
# install.packages('RSelenium')
# install.packages('rvest')
# install.packages('tidyverse')
# install.packages('netstat')
# install.packages('here')
# install.packages('dplyr')
# install.packages('readr')
#load packages ----
library(RSelenium)
library(rvest)
library(tidyverse)
library(netstat)
library(here)
library(dplyr)
library(readr)
#Define Date Range----
StartDate = data.frame("January", "11", "2023", as.Date("2023-01-11"))
EndDate = data.frame("March", "20", "2023", as.Date("2023-03-20"))
colnames(StartDate) = c("month", "day", "year", "date")
colnames(EndDate) = c("month", "day", "year", "date")
#Set up RSelenium----
##Set Default download folder ----
eCaps <- list(
chromeOptions =
list(prefs = list(
"profile.default_content_settings.popups" = 0L,
"download.prompt_for_download" = FALSE,
"download.default_directory" = here("WebData") # download.dir
)
)
)
default_folder = here("WebData")
## Open browser ----
rs_driver_object <-rsDriver(
browser = 'chrome',
chromever ='111.0.5563.64',
port = free_port(),
)
remDr <- rs_driver_object$client
#PRISM Precipitation Bulk Download----
URL = "https://prism.oregonstate.edu/explorer/bulk.php"
remDr$navigate(URL)
#Import Precipitation Stations
file_path <- here("InputData/prism_rr_precip_stations.csv")
file_input <- remDr$findElement(using = "xpath", "//input[@type='file']")
file_input$sendKeysToElement(list(file_path))
#Wait for the file to be selected
Sys.sleep(5)
#Open Locations File
Locations <-remDr$findElement(using = "id", value = "upload_locations")
Locations$clickElement()
MeanTemp <- remDr$findElement(using = "id", value = "cvar_tmean")
MeanTemp$clickElement()
#SI Units
Units <-remDr$findElement(using = "id", value = "units_si")
Units$clickElement()
#Interpolate Grid Cell Values
Grid <- remDr$findElement(using = "id", value = "loc_interp")
Grid$clickElement()
#Select Daily Values----
#Select Daily values checkbox
Daily <- remDr$findElement(using = "id", value = "tper_daily")
Daily$clickElement()
#Set start and end date ranges
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(StartDate$day))
StartMonth <- remDr$findElement(using = "id", value = "tper_daily_start_month")
StartMonth$sendKeysToElement(list(StartDate$month))
StartYear <-remDr$findElement(using = "id", value = "tper_daily_start_year")
StartYear$sendKeysToElement(list(StartDate$year))
EndDay <-remDr$findElement(using = "id", value = "tper_daily_end_day")
EndDay$sendKeysToElement(list(EndDate$day))
EndMonth <-remDr$findElement(using = "id", value = "tper_daily_end_month")
EndMonth$sendKeysToElement(list(EndDate$month))
EndYear <- remDr$findElement(using = "id", value = "tper_daily_end_year")
EndYear$sendKeysToElement(list(EndDate$year))
StartMonth <- remDr$findElement(using = "id", value = "tper_daily_start_month")
StartMonth$sendKeysToElement(list(StartDate$month))
StartYear <-remDr$findElement(using = "id", value = "tper_daily_start_year")
StartYear$sendKeysToElement(list(StartDate$year))
Daily <- remDr$findElement(using = "id", value = "tper_daily")
Daily$clickElement()
#Set start and end date ranges
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(StartDate$day))
StartMonth <- remDr$findElement(using = "id", value = "tper_daily_start_month")
StartMonth$sendKeysToElement(list(StartDate$month))
StartYear <-remDr$findElement(using = "id", value = "tper_daily_start_year")
StartYear$sendKeysToElement(list(StartDate$year))
EndDay <-remDr$findElement(using = "id", value = "tper_daily_end_day")
EndDay$sendKeysToElement(list(EndDate$day))
EndMonth <-remDr$findElement(using = "id", value = "tper_daily_end_month")
EndMonth$sendKeysToElement(list(EndDate$month))
EndYear <- remDr$findElement(using = "id", value = "tper_daily_end_year")
EndYear$sendKeysToElement(list(EndDate$year))
StartDate <- as.Date("2023-01-11")
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
StartMonth <- remDr$findElement(using = "id", value = "tper_daily_start_month")
StartMonth$sendKeysToElement(list(format(StartDate, "%B")))
StartYear <- remDr$findElement(using = "id", value = "tper_daily_start_year")
StartYear$sendKeysToElement(list(format(StartDate, "%Y")))
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
list(format(StartDate, "%d"))
list(format(StartDate, "%B"))
list(format(StartDate, "%Y"))
EndDate <- as.Date("2023-03-20")
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
StartMonth <- remDr$findElement(using = "id", value = "tper_daily_start_month")
StartMonth$sendKeysToElement(list(format(StartDate, "%B")))
StartYear <- remDr$findElement(using = "id", value = "tper_daily_start_year")
StartYear$sendKeysToElement(list(format(StartDate, "%Y")))
EndDay <-remDr$findElement(using = "id", value = "tper_daily_end_day")
EndDay$sendKeysToElement(list(format(EndDate, "%d")))
EndMonth <-remDr$findElement(using = "id", value = "tper_daily_end_month")
EndMonthsendKeysToElement(list(format(EndDate, "%B")))
EndDay <-remDr$findElement(using = "id", value = "tper_daily_end_day")
EndDay$sendKeysToElement(list(format(EndDate, "%d")))
EndMonth <-remDr$findElement(using = "id", value = "tper_daily_end_month")
EndMonth$sendKeysToElement(list(format(EndDate, "%B")))
EndYear <- remDr$findElement(using = "id", value = "tper_daily_end_year")
EndYear$sendKeysToElement(list(format(StartDate, "%Y")))
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
StartMonth <- remDr$findElement(using = "id", value = "tper_daily_start_month")
StartMonth$sendKeysToElement(list(format(StartDate, "%B")))
StartYear <- remDr$findElement(using = "id", value = "tper_daily_start_year")
StartYear$sendKeysToElement(list(format(StartDate, "%Y")))
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
StartMonth <- remDr$findElement(using = "id", value = "tper_daily_start_month")
StartMonth$sendKeysToElement(list(format(StartDate, "%B")))
StartYear <- remDr$findElement(using = "id", value = "tper_daily_start_year")
StartYear$sendKeysToElement(list(format(StartDate, "%Y")))
EndDay <-remDr$findElement(using = "id", value = "tper_daily_end_day")
EndDay$sendKeysToElement(list(format(EndDate, "%d")))
EndMonth <-remDr$findElement(using = "id", value = "tper_daily_end_month")
EndMonth$sendKeysToElement(list(format(EndDate, "%B")))
EndYear <- remDr$findElement(using = "id", value = "tper_daily_end_year")
EndYear$sendKeysToElement(list(format(StartDate, "%Y")))
StartDate <- as.Date("2023-01-11")
EndDate <- as.Date("2023-03-20")
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(sprintf("%02d", day(StartDate))))
#Set start and end date ranges
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(sprintf("%02d", day(StartDate))))
library(lubridate)
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(day(StartDate)))
(list(month(StartDate, label = TRUE))
list(month(StartDate, label = TRUE))
list(month(StartDate, label = TRUE))
list(month(StartDate))
month(StartDate)
StartMonth <- remDr$findElement(using = "id", value = "tper_daily_start_month")
StartMonth$sendKeysToElement(list(format(StartDate, "%B")))
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(day(StartDate)))
list(day(StartDate))
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(day(StartDate)))
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
StartMonth <- remDr$findElement(using = "id", value = "tper_daily_start_month")
StartMonth$sendKeysToElement(list(format(StartDate, "%B")))
StartYear <- remDr$findElement(using = "id", value = "tper_daily_start_year")
StartYear$sendKeysToElement(list(format(StartDate, "%Y")))
Sys.Sleep(3)
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
StartMonth <- remDr$findElement(using = "id", value = "tper_daily_start_month")
StartMonth$sendKeysToElement(list(format(StartDate, "%B")))
StartYear <- remDr$findElement(using = "id", value = "tper_daily_start_year")
StartYear$sendKeysToElement(list(format(StartDate, "%Y")))
Sys.sleep(3)
EndDay <-remDr$findElement(using = "id", value = "tper_daily_end_day")
EndDay$sendKeysToElement(list(format(EndDate, "%d")))
EndMonth <-remDr$findElement(using = "id", value = "tper_daily_end_month")
EndMonth$sendKeysToElement(list(format(EndDate, "%B")))
EndYear <- remDr$findElement(using = "id", value = "tper_daily_end_year")
EndYear$sendKeysToElement(list(format(StartDate, "%Y")))
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
StartMonth <- remDr$findElement(using = "id", value = "tper_daily_start_month")
StartMonth$sendKeysToElement(list(format(StartDate, "%B")))
StartYear <- remDr$findElement(using = "id", value = "tper_daily_start_year")
StartYear$sendKeysToElement(list(format(StartDate, "%Y")))
Sys.sleep(3)
EndDay <-remDr$findElement(using = "id", value = "tper_daily_end_day")
EndDay$sendKeysToElement(list(format(EndDate, "%d")))
EndMonth <-remDr$findElement(using = "id", value = "tper_daily_end_month")
EndMonth$sendKeysToElement(list(format(EndDate, "%B")))
EndYear <- remDr$findElement(using = "id", value = "tper_daily_end_year")
EndYear$sendKeysToElement(list(format(EndDate, "%Y")))
StartDate <- as.Date("2023-01-11")
EndDate <- as.Date("2023-03-20")
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
StartMonth <- remDr$findElement(using = "id", value = "tper_daily_start_month")
StartMonth$sendKeysToElement(list(format(StartDate, "%B")))
StartYear <- remDr$findElement(using = "id", value = "tper_daily_start_year")
StartYear$sendKeysToElement(list(format(StartDate, "%Y")))
Sys.sleep(3)
EndDay <-remDr$findElement(using = "id", value = "tper_daily_end_day")
EndDay$sendKeysToElement(list(format(EndDate, "%d")))
EndMonth <-remDr$findElement(using = "id", value = "tper_daily_end_month")
EndMonth$sendKeysToElement(list(format(EndDate, "%B")))
EndYear <- remDr$findElement(using = "id", value = "tper_daily_end_year")
EndYear$sendKeysToElement(list(format(EndDate, "%Y")))
#SCRIPT LAST UPDATED:
#BY: Payman Alemi
#ON: 3/20/2023
#install packages----
#you should only have to do this once ever on your computer; then comment
#out this portion of the script
# install.packages('RSelenium')
# install.packages('rvest')
# install.packages('tidyverse')
# install.packages('netstat')
# install.packages('here')
# install.packages('dplyr')
# install.packages('readr')
#load packages ----
library(RSelenium)
library(rvest)
library(tidyverse)
library(netstat)
library(here)
library(dplyr)
library(readr)
#Define Date Range----
StartDate <- as.Date("2023-01-11")
EndDate <- as.Date("2023-03-20")
#Set up RSelenium----
##Set Default download folder ----
eCaps <- list(
chromeOptions =
list(prefs = list(
"profile.default_content_settings.popups" = 0L,
"download.prompt_for_download" = FALSE,
"download.default_directory" = here("WebData") # download.dir
)
)
)
default_folder = here("WebData")
## Open browser ----
rs_driver_object <-rsDriver(
browser = 'chrome',
chromever ='111.0.5563.64',
port = free_port(),
)
list(format(EndDate, "%B"))
format(EndDate, "%Y"))
list(format(EndDate, "%Y"))
#SCRIPT LAST UPDATED:
#BY: Payman Alemi
#ON: 3/20/2023
#install packages----
#you should only have to do this once ever on your computer; then comment
#out this portion of the script
# install.packages('RSelenium')
# install.packages('rvest')
# install.packages('tidyverse')
# install.packages('netstat')
# install.packages('here')
# install.packages('dplyr')
# install.packages('readr')
#load packages ----
library(RSelenium)
library(rvest)
library(tidyverse)
library(netstat)
library(here)
library(dplyr)
library(readr)
#Define Date Range----
StartDate <- as.Date("2023-01-11")
EndDate <- as.Date("2023-03-20")
#Set up RSelenium----
##Set Default download folder ----
eCaps <- list(
chromeOptions =
list(prefs = list(
"profile.default_content_settings.popups" = 0L,
"download.prompt_for_download" = FALSE,
"download.default_directory" = here("WebData") # download.dir
)
)
)
default_folder = here("WebData")
## Open browser ----
rs_driver_object <-rsDriver(
browser = 'chrome',
chromever ='111.0.5563.64',
port = free_port(),
)
remDr <- rs_driver_object$client
#PRISM Precipitation Bulk Download----
URL = "https://prism.oregonstate.edu/explorer/bulk.php"
remDr$navigate(URL)
#Import Precipitation Stations
file_path <- here("InputData/prism_rr_precip_stations.csv")
file_input <- remDr$findElement(using = "xpath", "//input[@type='file']")
file_input$sendKeysToElement(list(file_path))
#Wait for the file to be selected
Sys.sleep(5)
#Open Locations File
Locations <-remDr$findElement(using = "id", value = "upload_locations")
Locations$clickElement()
#Uncheck Mean temperature checkbox
MeanTemp <- remDr$findElement(using = "id", value = "cvar_tmean")
MeanTemp$clickElement()
#SI Units
Units <-remDr$findElement(using = "id", value = "units_si")
Units$clickElement()
#Interpolate Grid Cell Values
Grid <- remDr$findElement(using = "id", value = "loc_interp")
Grid$clickElement()
#Select Daily Values----
#Select Daily values checkbox
Daily <- remDr$findElement(using = "id", value = "tper_daily")
Daily$clickElement()
#Set start and end date ranges
StartDay <- remDr$findElement(using = "id", value = "tper_daily_start_day")
StartDay$sendKeysToElement(list(format(StartDate, "%d")))
StartMonth <- remDr$findElement(using = "id", value = "tper_daily_start_month")
StartMonth$sendKeysToElement(list(format(StartDate, "%B")))
StartYear <- remDr$findElement(using = "id", value = "tper_daily_start_year")
StartYear$sendKeysToElement(list(format(StartDate, "%Y")))
Sys.sleep(7)
EndDay <-remDr$findElement(using = "id", value = "tper_daily_end_day")
EndDay$sendKeysToElement(list(format(EndDate, "%d")))
EndMonth <-remDr$findElement(using = "id", value = "tper_daily_end_month")
EndMonth$sendKeysToElement(list(format(EndDate, "%B")))
EndYear <- remDr$findElement(using = "id", value = "tper_daily_end_year")
EndYear$sendKeysToElement(list(format(EndDate, "%Y")))
#Prepare and Download Time Series
Download <- remDr$findElement(using = "id", value = "submitdown_button")
Download$clickElement()
PT <- read.csv(here("WebData/PRISM_Temperature.csv"), skip = 10, header = T)
View(PT)
View(PT)
names(PT)[5:6] = c("Tmin", "Tmax")
#Remove unnecessary columns
PT <- select(PT, c("Name", "Tmin", "Tmax"))
PT <- read.csv(here("WebData/PRISM_Temperature.csv"), skip = 10, header = T)
names(PT)[5:6] = c("Tmin", "Tmax")
#Remove unnecessary columns
PT <- select(PT, c("Station", "Date", "Tmin", "Tmax"))
PT <- read.csv(here("WebData/PRISM_Temperature.csv"), skip = 10, header = T)
names(PT)[1,5:6] = c("Station","Tmin", "Tmax")
PT <- read.csv(here("WebData/PRISM_Temperature.csv"), skip = 10, header = T)
View(PT)
names(PT)[1,5:6] = c("Station","Tmin", "Tmax")
colnames(PT)[1,5:6] = c("Station","Tmin", "Tmax")
PT <- read.csv(here("WebData/PRISM_Temperature.csv"), skip = 10, header = T)
names(PT)[c(1, 5, 6)] <- c("Station", "Tmin", "Tmax")
PT <- select(PT, c("Station", "Date", "Tmin", "Tmax"))
#Load libraries----
library(here)
library(dplyr)
library(tidyr)
library(tidyverse)
library(lubridate)
#PRISM Precipitation Data Manipulation----
#Import PRISM_Precipitation.csv by skipping first 10 rows
ndays = 68
PP <- read.csv(here("WebData/PRISM_Precipitation.csv"), skip = 10, header = T)
names(PP)[1] = "Station"
names(PP)[6] = "ppt"
#Remove unnecessary columns
PP = select(PP, c("Station", "Date", "ppt"))
#Pivot PP so that each station becomes a separate column
PP <- pivot_wider(PP, id_cols = Date, names_from = Station, values_from = ppt)
##create separate dataframes for each Prism precipitation station----
#Create a vector consisting of each station's new name
PP_NewNames <- c("PP_PRECIP1", "PP_PRECIP2", "PP_PRECIP3", "PP_PRECIP4", "PP_PRECIP5",
"PP_PRECIP6", "PP_PRECIP7", "PP_PRECIP8", "PP_PRECIP9", "PP_PRECIP10",
"PP_PRECIP11", "PP_PRECIP12", "PP_PRECIP13", "PP_PRECIP14", "PP_PRECIP15")
PP_OldNames <- unique(PP) #vector of unique Prism station names
colnames(PP) = PP_NewNames
#Export PP to CSV
write.csv(here("WebData/PRISM_Precipitation.csv", row.names = FALSE))
#PRISM Temperature Data Manipulation----
#Import Prism_Temp.csv by skipping first 10 rows
PT <- read.csv(here("WebData/PRISM_Temperature.csv"), skip = 10, header = T)
names(PT)[c(1, 5, 6)] <- c("Station", "Tmin", "Tmax")
#Remove unnecessary columns
PT <- select(PT, c("Station", "Date", "Tmin", "Tmax"))
View(PP)
PP_NewNames <- c("Date", "PP_PRECIP1", "PP_PRECIP2", "PP_PRECIP3", "PP_PRECIP4", "PP_PRECIP5",
"PP_PRECIP6", "PP_PRECIP7", "PP_PRECIP8", "PP_PRECIP9", "PP_PRECIP10",
"PP_PRECIP11", "PP_PRECIP12", "PP_PRECIP13", "PP_PRECIP14", "PP_PRECIP15")
PP_OldNames <- unique(PP) #vector of unique Prism station names
colnames(PP) = PP_NewNames
View(PP)
PT <- read.csv(here("WebData/PRISM_Temperature.csv"), skip = 10, header = T)
names(PT)[c(1, 5, 6)] <- c("Station", "Tmin", "Tmax")
#Remove unnecessary columns
PT <- select(PT, c("Station", "Date", "Tmin", "Tmax"))
PT <- read.csv(here("WebData/PRISM_Temperature.csv"), skip = 10, header = T)
View(PT)
names(PT)[c(1, 6, 7)] <- c("Station", "Tmin", "Tmax")
View(PT)
PT <- select(PT, c("Station", "Date", "Tmin", "Tmax"))
PT <- pivot_wider(PT, id_cols = Date, names_from = Station, values_from = Tmin, Tmax)
PT <- pivot_wider(PT, id_cols = Date, names_from = Station, values_from = c("Tmin", "Tmax"))
View(PT)
PT <- read.csv(here("WebData/PRISM_Temperature.csv"), skip = 10, header = T)
names(PT)[c(1, 6, 7)] <- c("Station", "Tmin", "Tmax")
#Remove unnecessary columns
PT <- select(PT, c("Station", "Date", "Tmin", "Tmax"))
PT2 <- pivot_wider(PT, id_cols = Date, names_from = Station, values_from = c("Tmin", "Tmax"))
View(PT2)
View(PT2)
View(PT)
PT_NewNames <- c("Date", "PT_TMIN1", "PT_TMIN2", "PT_TMIN3", "PT_TMIN4",
"PT_TMIN5", "PT_TMIN6", "PT_TMIN7", "PT_TMIN8",
"PT_TMAX1", "PT_TMAX2", "PT_TMAX3", "PT_TMAX4",
"PT_TMAX5", "PT_TMAX6", "PT_TMAX7", "PT_TMAX8")
PT_OldNames <-unique(PT$Name)
colnames(PT) = PT_NewNames
colnames(PT2) = PT_NewNames
PT <- pivot_wider(PT, id_cols = Date, names_from = Station, values_from = c("Tmin", "Tmax"))
##Create separate dataframes for each Prism temperature station----
PT_NewNames <- c("Date", "PT_TMIN1", "PT_TMIN2", "PT_TMIN3", "PT_TMIN4",
"PT_TMIN5", "PT_TMIN6", "PT_TMIN7", "PT_TMIN8",
"PT_TMAX1", "PT_TMAX2", "PT_TMAX3", "PT_TMAX4",
"PT_TMAX5", "PT_TMAX6", "PT_TMAX7", "PT_TMAX8")
PT_OldNames <-unique(PT$Name)
#Replace Old Prism station names with new names
colnames(PT) = PT_NewNames
?merge()
Prism_Processed = merge(x= PT, y = PP, by = "Date")
View(Prism_Processed)
Prism_Processed = merge(x= PT, y = PP, by = "Date")
write.csv(Prism_Processed, "ProcessedData\Prism_Processed.csv", row.names = FALSE)
write.csv(Prism_Processed, "ProcessedData/Prism_Processed.csv", row.names = FALSE)
