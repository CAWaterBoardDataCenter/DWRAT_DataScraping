##create separate dataframes for each Prism precipitation station----
#Create a vector consisting of each station's new name
PP_NewNames <- c("PP_PRECIP1", "PP_PRECIP2", "PP_PRECIP3", "PP_PRECIP4", "PP_PRECIP5",
"PP_PRECIP6", "PP_PRECIP7", "PP_PRECIP8", "PP_PRECIP9", "PP_PRECIP10",
"PP_PRECIP11", "PP_PRECIP12", "PP_PRECIP13", "PP_PRECIP14", "PP_PRECIP15")
PP_OldNames <- unique(PP$Name) #vector of unique Prism station names
#Replace old Prism station names with new names
PP$Name <- PP_NewNames[match(PP$Name,PP_OldNames, nomatch = 0)]
#Extract each station as a separate dataframe
for (i in unique(PP$Name)) {
assign(i, PP %>% filter (Name == i), envir = .GlobalEnv)
}
#Import DAT stuff
DAT_File <- read.delim(here("InputData/data_update_to_11.30.2022.txt"), sep = "\t")
DAT_Fields <- read.csv(here("InputData/DAT_Fields.csv"))
View(DAT_Fields)
View(DAT_File)
View(DAT_File)
#Set DAT_File column names
colnames(DAT_File) <- colnames(DAT_Fields)
#Whittle the DAT_File to a subset corresponding to our timeframe of interest, "DAT_Shell"----
#Add a Timestep column
DAT_File$TimeStep <- make_date(year = DAT_File$Year,
month = DAT_File$month,
day = DAT_File$day)
#Filter to the timeframe of interest
#Set the start date by grabbing the first day of the current month
#Start_Date <- lubridate::floor_date(Sys.Date(), unit = "month")
Start_Date <- as.Date("2023-01-11")
View(StartDate)
#The end date is the current date + 5 days in the future; we grab 6 days of forecast data from CNRFC
End_Date <- Sys.Date() + 5
View(EndDates)
View(EndDate)
View(EndDate)
#The end date is the current date + 5 days in the future; we grab 6 days of forecast data from CNRFC
End_Date <- Sys.Date() + 5
View(EndDate)
End_Date
View(EndDate)
DAT_Shell <- subset(DAT_File, TimeStep >= '2023-01-11' & TimeStep <= "2023-03-25") #Adjust as needed
DAT_Shell
View(DAT_Shell)
#Set TimeStep as the 7th column in DAT_Shell
DAT_Shell <- DAT_Shell %>% relocate(TimeStep, .after = s)
#Set all the DAT_Shell temperature and precipitation fields to blank
for (i in 1:length(DAT_Shell)){
if (colnames(DAT_Shell[i]) %>% str_detect("PREC")){
DAT_Shell[i] = ""
} else if (colnames(DAT_Shell[i]) %>% str_detect("TM")){
DAT_Shell[i] = ""
}else {
DAT_Shell[i] = DAT_Shell[i]
}
}
CIMIS_Processed
View(CIMIS_Processed)
# Import CNRFC Temperature stations----
CNRFC_Stations <- read.csv(here("InputData/CNRFC_Stations.csv"))
##Set Default download folder ----
eCaps <- list(
chromeOptions =
list(prefs = list(
"profile.default_content_settings.popups" = 0L,
"download.prompt_for_download" = FALSE,
"download.default_directory" = gsub(pattern = '/', replacement = '\\\\', x = here("WebData")) # download.dir
)
)
)
default_folder <- eCaps$chromeOptions$prefs$download.default_directory
#
## Find active versions of chrome on PC ----
binman::list_versions('chromedriver')
## Open a chrome browser session with RSelenium ----
rs_driver_object <-rsDriver(
browser = 'chrome',
chromever ='111.0.5563.64', #set to the version on your PC that most closely matches the chrome browser version
port = free_port(),
extraCapabilities = eCaps
)
remDr <- rs_driver_object$client
remDr$open()
#Navigate to CNRFC website
for (i in 1:nrow(CNRFC_Stations)){
CNRFC <- paste0("https://www.cnrfc.noaa.gov/temperaturePlots_hc.php?id=", CNRFC_Stations$TempStation[i])
remDr$navigate(CNRFC)
#Select Chart Menu
ChartMenu <- remDr$findElement(using = "xpath", "//button[@aria-label = 'View chart menu']")
ChartMenu$clickElement()
#Download as CSV
CSVDownload <- remDr$findElement(using = "xpath", "//ul//li[contains(., 'CSV')]")
CSVDownload$clickElement()
}
#Work in progess ----
#Combining CNRFC data with CIMIS data
CNRFC_precip_data <- read.csv(here("InputData/CNRFC_precip_data.csv"))
library(here)
library(dplyr)
library(tidyr)
library(tidyverse)
library(lubridate)
#PRISM Precipitation Data Manipulation----
#Import PRISM_Precipitation.csv by skipping first 10 rows
ndays = 68
PP <- read.csv(here("WebData/PRISM_Precipitation.csv"), skip = 10, header = T)
names(PP)[1] = "Station"
names(PP)[6] = "ppt"
#Remove unnecessary columns
PP = select(PP, c("Station", "Date", "ppt"))
#Pivot PP so that each station becomes a separate column
PP <- pivot_wider(PP, id_cols = Date, names_from = Station, values_from = ppt)
##create separate dataframes for each Prism precipitation station----
#Create a vector consisting of each station's new name
PP_NewNames <- c("Date", "PP_PRECIP1", "PP_PRECIP2", "PP_PRECIP3", "PP_PRECIP4", "PP_PRECIP5",
"PP_PRECIP6", "PP_PRECIP7", "PP_PRECIP8", "PP_PRECIP9", "PP_PRECIP10",
"PP_PRECIP11", "PP_PRECIP12", "PP_PRECIP13", "PP_PRECIP14", "PP_PRECIP15")
PP_OldNames <- unique(PP) #vector of unique Prism station names
colnames(PP) = PP_NewNames
#Export PP to CSV
write.csv(here("WebData/PRISM_Precipitation.csv", row.names = FALSE))
View(PP)
View(PP_OldNames)
#Export PP to CSV
write.csv(PP, here("WebData/PRISM_Precipitation.csv", row.names = FALSE))
#Load libraries
library(here)
library(dplyr)
library(tidyr)
library(stringr)
#Import CNRFC Data----
#Import CNRFC Temperature Data for LSEC1 and MWEC1
MWEC1 = read.csv(here("WebData/MWEC1_temperaturePlot.csv"))
LSEC1 = read.csv(here("WebData/LSEC1_temperaturePlot.csv"))
#Import CNRFC precipitation Data for LSEC1 and MWEC1
CNRFC_Precip_Raw <- readr::read_csv(here::here("WebData/cnrfc_qpf.csv"), skip =1)
#Reformat the CNRFC Precipitation Data----
#Remove leading and trailing whitespaces from CNRFC_Precip_Raw
CNRFC_Precip <- apply(CNRFC_Precip_Raw, 2, trimws) %>% data.frame()
#Remove rows 3 and 4
CNRFC_Precip <- CNRFC_Precip[-c(3,4),]
CNRFC_Precip
#Rename columns 1-3
New_Names = c("Station","Forecast_Group", "Station_Name")
colnames(CNRFC_Precip)[1:3] = New_Names
#Remove rows 1 and 2
CNRFC_Precip <- CNRFC_Precip[-c(1,2),]
CNRFC_Precip
#Filter to just the LSEC1 and MWEC1 rows----
CNRFC_Precip_SRP <- filter(CNRFC_Precip, Station == "LSEC1" | Station == "MWEC1")
#Remove the Forecast Group and Station Name columns
CNRFC_Precip_SRP <- select(CNRFC_Precip_SRP, -c("Station_Name", "Forecast_Group"))
#Remove the final 3 columns so that we just have the 3/23/2023 - 3/28/2023 date range
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[, 1:23]
CNRFC_Precip_SRP <- t(CNRFC_Precip_SRP) %>% data.frame()
#Set column names
colnames(CNRFC_Precip_SRP) <- CNRFC_Precip_SRP[1, ]
CNRFC_Precip_SRP$Date <-rownames(CNRFC_Precip_SRP)
#Move Date column to 1st column
CNRFC_Precip_SRP <-cbind(CNRFC_Precip_SRP[,3], CNRFC_Precip_SRP[,-3])
#Keep only the date portion of the dates (positions 2-11)
CNRFC_Precip_SRP$Date <- substr(CNRFC_Precip_SRP$Date,2,11)
View(CNRFC_Precip_SRP)
#Load libraries
library(here)
library(dplyr)
library(tidyr)
library(stringr)
#Import CNRFC Data----
#Import CNRFC Temperature Data for LSEC1 and MWEC1
MWEC1 = read.csv(here("WebData/MWEC1_temperaturePlot.csv"))
LSEC1 = read.csv(here("WebData/LSEC1_temperaturePlot.csv"))
#Import CNRFC precipitation Data for LSEC1 and MWEC1
CNRFC_Precip_Raw <- readr::read_csv(here::here("WebData/cnrfc_qpf.csv"), skip =1)
#Reformat the CNRFC Precipitation Data----
#Remove leading and trailing whitespaces from CNRFC_Precip_Raw
CNRFC_Precip <- apply(CNRFC_Precip_Raw, 2, trimws) %>% data.frame()
#Remove rows 3 and 4
CNRFC_Precip <- CNRFC_Precip[-c(3,4),]
CNRFC_Precip
#Rename columns 1-3
New_Names = c("Station","Forecast_Group", "Station_Name")
colnames(CNRFC_Precip)[1:3] = New_Names
#Remove rows 1 and 2
CNRFC_Precip <- CNRFC_Precip[-c(1,2),]
CNRFC_Precip
#Filter to just the LSEC1 and MWEC1 rows----
CNRFC_Precip_SRP <- filter(CNRFC_Precip, Station == "LSEC1" | Station == "MWEC1")
#Remove the Forecast Group and Station Name columns
CNRFC_Precip_SRP <- select(CNRFC_Precip_SRP, -c("Station_Name", "Forecast_Group"))
#Load libraries
library(here)
library(dplyr)
library(tidyr)
library(stringr)
#Import CNRFC Data----
#Import CNRFC Temperature Data for LSEC1 and MWEC1
MWEC1 = read.csv(here("WebData/MWEC1_temperaturePlot.csv"))
LSEC1 = read.csv(here("WebData/LSEC1_temperaturePlot.csv"))
#Import CNRFC precipitation Data for LSEC1 and MWEC1
CNRFC_Precip_Raw <- readr::read_csv(here::here("WebData/cnrfc_qpf.csv"), skip =1)
#Reformat the CNRFC Precipitation Data----
#Remove leading and trailing whitespaces from CNRFC_Precip_Raw
CNRFC_Precip <- apply(CNRFC_Precip_Raw, 2, trimws) %>% data.frame()
#Remove rows 3 and 4
CNRFC_Precip <- CNRFC_Precip[-c(3,4),]
CNRFC_Precip
#Rename columns 1-3
New_Names = c("Station","Forecast_Group", "Station_Name")
colnames(CNRFC_Precip)[1:3] = New_Names
#Remove rows 1 and 2
CNRFC_Precip <- CNRFC_Precip[-c(1,2),]
CNRFC_Precip
#Filter to just the LSEC1 and MWEC1 rows----
CNRFC_Precip_SRP <- filter(CNRFC_Precip, Station == "LSEC1" | Station == "MWEC1")
#Remove the Forecast Group and Station Name columns
CNRFC_Precip_SRP <- select(CNRFC_Precip_SRP, -c("Station_Name", "Forecast_Group"))
View(CNRFC_Precip_SRP)
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[, 1:23]
CNRFC_Precip_SRP <- t(CNRFC_Precip_SRP) %>% data.frame()
colnames(CNRFC_Precip_SRP) <- CNRFC_Precip_SRP[1, ]
CNRFC_Precip_SRP$Date <-rownames(CNRFC_Precip_SRP)
CNRFC_Precip_SRP <-cbind(CNRFC_Precip_SRP[,3], CNRFC_Precip_SRP[,-3])
View(CNRFC_Precip_SRP)
NRFC_Precip_SRP <- filter(CNRFC_Precip, Station == "LSEC1" | Station == "MWEC1")
#Remove the Forecast Group and Station Name columns
CNRFC_Precip_SRP <- select(CNRFC_Precip_SRP, -c("Station_Name", "Forecast_Group"))
View(CNRFC_Precip_SRP)
CNRFC_Precip_SRP <- filter(CNRFC_Precip, Station == "LSEC1" | Station == "MWEC1")
CNRFC_Precip_SRP <- select(CNRFC_Precip_SRP, -c("Station_Name", "Forecast_Group"))
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[, 1:23]
CNRFC_Precip_SRP <- t(CNRFC_Precip_SRP) %>% data.frame()
View(CNRFC_Precip_SRP)
colnames(CNRFC_Precip_SRP) <- CNRFC_Precip_SRP[1, ]
View(CNRFC_Precip_SRP)
CNRFC_Precip_SRP$Date <-rownames(CNRFC_Precip_SRP)
View(CNRFC_Precip_SRP)
CNRFC_Precip_SRP <- filter(CNRFC_Precip, Station == "LSEC1" | Station == "MWEC1")
#Remove the Forecast Group and Station Name columns
CNRFC_Precip_SRP <- select(CNRFC_Precip_SRP, -c("Station_Name", "Forecast_Group"))
#Remove the final 3 columns so that we just have the 3/23/2023 - 3/28/2023 date range
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[, 1:23]
CNRFC_Precip_SRP <- t(CNRFC_Precip_SRP) %>% data.frame()
#Set column names
colnames(CNRFC_Precip_SRP) <- CNRFC_Precip_SRP[1, ]
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[-1, ]
View(CNRFC_Precip_SRP)
CNRFC_Precip_SRP$Date <-rownames(CNRFC_Precip_SRP)
View(CNRFC_Precip_SRP)
row.names(CNRFC_Precip_SRP) <- NULL
View(CNRFC_Precip_SRP)
CNRFC_Precip_SRP$Date <- substr(CNRFC_Precip_SRP$Date,2,11)
View(CNRFC_Precip_SRP)
CNRFC_Precip_SRP$Date <- as.Date(CNRFC_Precip_SRP$Date, format = "%m/.%d.%Y")
CNRFC_Precip_SRP <- filter(CNRFC_Precip, Station == "LSEC1" | Station == "MWEC1")
#Remove the Forecast Group and Station Name columns
CNRFC_Precip_SRP <- select(CNRFC_Precip_SRP, -c("Station_Name", "Forecast_Group"))
#Remove the final 3 columns so that we just have the 3/23/2023 - 3/28/2023 date range
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[, 1:23]
CNRFC_Precip_SRP <- t(CNRFC_Precip_SRP) %>% data.frame()
#Set column names
colnames(CNRFC_Precip_SRP) <- CNRFC_Precip_SRP[1, ]
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[-1, ]
CNRFC_Precip_SRP$Date <-rownames(CNRFC_Precip_SRP)
#Delete row names
row.names(CNRFC_Precip_SRP) <- NULL
#Keep only the date portion of the dates (positions 2-11)
CNRFC_Precip_SRP$Date <- substr(CNRFC_Precip_SRP$Date,2,11)
as.Date(CNRFC_Precip_SRP$Date)
as.Date(CNRFC_Precip_SRP$Date)
gsub(".", "/", CNRFC_Precip_SRP$Date)
CNRFC_Precip_SRP$Date <- gsub(".", "/", CNRFC_Precip_SRP$Date)
CNRFC_Precip_SRP <- filter(CNRFC_Precip, Station == "LSEC1" | Station == "MWEC1")
#Remove the Forecast Group and Station Name columns
CNRFC_Precip_SRP <- select(CNRFC_Precip_SRP, -c("Station_Name", "Forecast_Group"))
#Remove the final 3 columns so that we just have the 3/23/2023 - 3/28/2023 date range
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[, 1:23]
CNRFC_Precip_SRP <- t(CNRFC_Precip_SRP) %>% data.frame()
#Set column names
colnames(CNRFC_Precip_SRP) <- CNRFC_Precip_SRP[1, ]
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[-1, ]
CNRFC_Precip_SRP$Date <-rownames(CNRFC_Precip_SRP)
#Delete row names
row.names(CNRFC_Precip_SRP) <- NULL
#Keep only the date portion of the dates (positions 2-11)
CNRFC_Precip_SRP$Date <- substr(CNRFC_Precip_SRP$Date,2,11)
#Convert the Date column to Date format
CNRFC_Precip_SRP$Date2 <- as.Date(CNRFC_Precip_SRP$Date, format = "%m/.%d.%Y")
is.na(CNRFC_Precip_SRP$Date)
CNRFC_Precip_SRP$Date
CNRFC_Precip_SRP$Date2 <- as.Date(CNRFC_Precip_SRP$Date, format = "%m.%d.%Y")
CNRFC_Precip_SRP$Date <- as.Date(CNRFC_Precip_SRP$Date, format = "%m.%d.%Y")
CNRFC_Precip_SRP <- filter(CNRFC_Precip, Station == "LSEC1" | Station == "MWEC1")
#Remove the Forecast Group and Station Name columns
CNRFC_Precip_SRP <- select(CNRFC_Precip_SRP, -c("Station_Name", "Forecast_Group"))
#Remove the final 3 columns so that we just have the 3/23/2023 - 3/28/2023 date range
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[, 1:23]
CNRFC_Precip_SRP <- t(CNRFC_Precip_SRP) %>% data.frame()
#Set column names
colnames(CNRFC_Precip_SRP) <- CNRFC_Precip_SRP[1, ]
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[-1, ]
CNRFC_Precip_SRP$Date <-rownames(CNRFC_Precip_SRP)
#Delete row names
row.names(CNRFC_Precip_SRP) <- NULL
#Keep only the date portion of the dates (positions 2-11)
CNRFC_Precip_SRP$Date <- substr(CNRFC_Precip_SRP$Date,2,11)
#Convert the Date column to Date format
CNRFC_Precip_SRP$Date <- as.Date(CNRFC_Precip_SRP$Date, format = "%m.%d.%Y")
View(CNRFC_Precip_SRP)
CNRFC_Precip_SRP <- filter(CNRFC_Precip, Station == "LSEC1" | Station == "MWEC1")
#Remove the Forecast Group and Station Name columns
CNRFC_Precip_SRP <- select(CNRFC_Precip_SRP, -c("Station_Name", "Forecast_Group"))
#Remove the final 3 columns so that we just have the 3/23/2023 - 3/28/2023 date range
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[, 1:23]
CNRFC_Precip_SRP <- t(CNRFC_Precip_SRP) %>% data.frame()
#Set column names
colnames(CNRFC_Precip_SRP) <- CNRFC_Precip_SRP[1, ]
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[-1, ]
CNRFC_Precip_SRP$Date <-rownames(CNRFC_Precip_SRP)
#Delete row names
row.names(CNRFC_Precip_SRP) <- NULL
#Keep only the date portion of the dates (positions 2-11)
CNRFC_Precip_SRP$Date <- substr(CNRFC_Precip_SRP$Date,2,11)
#Convert the Date column to Date format
CNRFC_Precip_SRP$Date <- as.Date(CNRFC_Precip_SRP$Date, format = "%m.%d.%Y")
View(CNRFC_Precip_SRP)
df <- CNRFC_Precip_SRP[, c(3,1,2)]
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[, c(3,1,2)]
rm(CNRFC_Precip_SRP)
#Load libraries
library(here)
library(dplyr)
library(tidyr)
library(stringr)
#Import CNRFC Data----
#Import CNRFC Temperature Data for LSEC1 and MWEC1
MWEC1 = read.csv(here("WebData/MWEC1_temperaturePlot.csv"))
LSEC1 = read.csv(here("WebData/LSEC1_temperaturePlot.csv"))
#Import CNRFC precipitation Data for LSEC1 and MWEC1
CNRFC_Precip_Raw <- readr::read_csv(here::here("WebData/cnrfc_qpf.csv"), skip =1)
#Reformat the CNRFC Precipitation Data----
#Remove leading and trailing whitespaces from CNRFC_Precip_Raw
CNRFC_Precip <- apply(CNRFC_Precip_Raw, 2, trimws) %>% data.frame()
#Remove rows 3 and 4
CNRFC_Precip <- CNRFC_Precip[-c(3,4),]
CNRFC_Precip
#Rename columns 1-3
New_Names = c("Station","Forecast_Group", "Station_Name")
colnames(CNRFC_Precip)[1:3] = New_Names
#Remove rows 1 and 2
CNRFC_Precip <- CNRFC_Precip[-c(1,2),]
CNRFC_Precip
#Filter to just the LSEC1 and MWEC1 rows----
CNRFC_Precip_SRP <- filter(CNRFC_Precip, Station == "LSEC1" | Station == "MWEC1")
#Remove the Forecast Group and Station Name columns
CNRFC_Precip_SRP <- select(CNRFC_Precip_SRP, -c("Station_Name", "Forecast_Group"))
#Remove the final 3 columns so that we just have the 3/23/2023 - 3/28/2023 date range
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[, 1:23]
CNRFC_Precip_SRP <- t(CNRFC_Precip_SRP) %>% data.frame()
#Set column names
colnames(CNRFC_Precip_SRP) <- CNRFC_Precip_SRP[1, ]
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[-1, ]
CNRFC_Precip_SRP$Date <-rownames(CNRFC_Precip_SRP)
#Delete row names
row.names(CNRFC_Precip_SRP) <- NULL
#Keep only the date portion of the dates (positions 2-11)
CNRFC_Precip_SRP$Date <- substr(CNRFC_Precip_SRP$Date,2,11)
#Convert the Date column to Date format
CNRFC_Precip_SRP$Date <- as.Date(CNRFC_Precip_SRP$Date, format = "%m.%d.%Y")
#Move the Date column to the 1st position
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[, c(3,1,2)]
View(CNRFC_Precip_SRP)
View(CNRFC_Precip_SRP)
CNRC_Precip_SRP[, -1] <- lapply(CNRFC_Precip_SRP[,-1], as.numeric)
CNRFC_Precip_SRP[, -1] <- lapply(CNRFC_Precip_SRP[,-1], as.numeric)
View(CNRFC_Precip_SRP)
sum_SRP <- aggregate(CNRFC_Precip_SRP[,-1], by = list(Date = CNRFC_Precip_Raw$Date),Fun = sum)
sum_SRP <- aggregate(CNRFC_Precip_SRP[,-1], by = list(Date = CNRFC_Precip_Raw$Date),FUN = sum)
sum_SRP <- aggregate(CNRFC_Precip_SRP[,-1], by = list(Date = CNRFC_Precip_SRP$Date),FUN = sum)
View(sum_SRP)
here()
MWEC1 <- read.csv(here("MWEC1_temperaturePlot.csv"))
MWEC1 <- read.csv(here("WebData/MWEC1_temperaturePlot.csv"))
LSEC1 <- read.csv(here("WebData/LSEC1_temperaturePlot.csv"))
MWEC1$Station = "MWEC1"
LSEC1$Station = "LSEC1"
SRP_Temp <- rbind(MWEC1, LSEC1)
View(SRP_Temp)
SRP_Temp[, -c(2:9)]
SRP_Temp[, -c(2:9)]
SRP_Temp[, -c(3:9)]
SRP_Temp <- SRP_Temp[, -c(4:9)]
NewNames <- c ("Date", "TObserved", "TForecast", "Station")
colnames(SRP_Temp) <- NewNames
CNRFC_Temp$Date <- as.Date(SRP_Temp$Date)
SRP_Temp$Date <- as.Date(SRP_Temp$Date)
SRP_Temp$Date <- format(SRP_Temp$Date, "%m/%d/%Y")
SRP_Temp <- SRP_Temp %>%
mutate(Temp = coalesce(TObserved, TForecast)) %>%
select(Date, Temp, Station)
SRP_Temp <- SRP_Temp %>%
group_by(Date, Station) %>%
summarise(Tmin = min(Temp), Tmax = max(Temp))
View(SRP_Temp)
View(SRP_Temp)
SRP_Temp2 <- pivot_wider(SRP_Temp, names_from = Station, values_from = c("Tmin", "Tmax"))
View(SRP_Temp2)
col_order_temp <- c("Date", "TMIN_LSEC1", "TMIN_MWEC1", "TMAX_LSEC1", "TMAX_MWEC1")
SRP_Temp2 <- SRP_Temp[, col_order_temp]
colnames(SRP_Temp2)
col_order_temp <- c("Date", "Tmax_LSEC1", "Tmax_MWEC1", "Tmin_LSEC1", "Tmin_MWEC1")
SRP_Temp2 <- SRP_Temp[, col_order_temp]
colnames(SRP_Temp2)
col_order_temp <- c("Date", "Tmax_LSEC1", "Tmax_MWEC1", "Tmin_LSEC1", "Tmin_MWEC1")
SRP_Temp2 <- SRP_Temp2[, col_order_temp]
FinalNames <- c("Date", "TMAX1_LSEC1", "TMAX_MWEC1", "TMIN_LSEC1", "TMIN_MWEC1")
colnames(SRP_Temp) = FinalNames
View(SRP_Temp)
#Load libraries
library(here)
library(dplyr)
library(tidyr)
library(stringr)
#Import CNRFC Data----
#Import CNRFC Temperature Data for LSEC1 and MWEC1
MWEC1 = read.csv(here("WebData/MWEC1_temperaturePlot.csv"))
LSEC1 = read.csv(here("WebData/LSEC1_temperaturePlot.csv"))
#Import CNRFC precipitation Data for LSEC1 and MWEC1
CNRFC_Precip_Raw <- readr::read_csv(here::here("WebData/cnrfc_qpf.csv"), skip =1)
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[, 1:23]
#Filter to just the LSEC1 and MWEC1 rows----
CNRFC_Precip_SRP <- filter(CNRFC_Precip, Station == "LSEC1" | Station == "MWEC1")
CNRFC_Precip_Raw <- readr::read_csv(here::here("WebData/cnrfc_qpf.csv"), skip =1)
#Reformat the CNRFC Precipitation Data----
#Remove leading and trailing whitespaces from CNRFC_Precip_Raw
CNRFC_Precip <- apply(CNRFC_Precip_Raw, 2, trimws) %>% data.frame()
#Remove rows 3 and 4
CNRFC_Precip <- CNRFC_Precip[-c(3,4),]
CNRFC_Precip
#Rename columns 1-3
New_Names = c("Station","Forecast_Group", "Station_Name")
colnames(CNRFC_Precip)[1:3] = New_Names
#Remove rows 1 and 2
CNRFC_Precip <- CNRFC_Precip[-c(1,2),]
CNRFC_Precip
#Filter to just the LSEC1 and MWEC1 rows----
CNRFC_Precip_SRP <- filter(CNRFC_Precip, Station == "LSEC1" | Station == "MWEC1")
#Remove the Forecast Group and Station Name columns
CNRFC_Precip_SRP <- select(CNRFC_Precip_SRP, -c("Station_Name", "Forecast_Group"))
#Remove the final 3 columns so that we just have the 4/4/2023 - 4/9/2023 date range
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[, 1:23]
CNRFC_Precip_SRP <- t(CNRFC_Precip_SRP) %>% data.frame()
#Set column names
colnames(CNRFC_Precip_SRP) <- CNRFC_Precip_SRP[1, ]
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[-1, ]
CNRFC_Precip_SRP$Date <-rownames(CNRFC_Precip_SRP)
#Delete row names
row.names(CNRFC_Precip_SRP) <- NULL
#Keep only the date portion of the dates (positions 2-11)
CNRFC_Precip_SRP$Date <- substr(CNRFC_Precip_SRP$Date,2,11)
#Convert the Date column to Date format
CNRFC_Precip_SRP$Date <- as.Date(CNRFC_Precip_SRP$Date, format = "%m.%d.%Y")
#Move the Date column to the 1st position
CNRFC_Precip_SRP <- CNRFC_Precip_SRP[, c(3,1,2)]
#Convert station columns to numeric format
CNRFC_Precip_SRP[, -1] <- lapply(CNRFC_Precip_SRP[,-1], as.numeric)
#Sup precipitation datate by Station and Date
sum_SRP <- aggregate(CNRFC_Precip_SRP[,-1], by = list(Date = CNRFC_Precip_SRP$Date),FUN = sum)
MWEC1 <- read.csv(here("WebData/MWEC1_temperaturePlot.csv"))
LSEC1 <- read.csv(here("WebData/LSEC1_temperaturePlot.csv"))
#Import the MWEC1 and LSEC1 CSVs
MWEC1 <- read.csv(here("WebData/MWEC1_temperaturePlot.csv"))
LSEC1 <- read.csv(here("WebData/LSEC1_temperaturePlot.csv"))
#Add Station column to each dataframe
MWEC1$Station = "MWEC1"
LSEC1$Station = "LSEC1"
#Combine the MWEC1 and LSEC1 dataframes
SRP_Temp <- rbind(MWEC1, LSEC1)
#Remove unnecessary columns from SRP_Temp
SRP_Temp <- SRP_Temp[, -c(4:9)]
#Update column names in CNRFC Temp CSVs
NewNames <- c ("Date", "TObserved", "TForecast", "Station")
colnames(SRP_Temp) <- NewNames
#Convert Date column into MM/dd/YYYY Date format
SRP_Temp$Date <- as.Date(SRP_Temp$Date)
SRP_Temp$Date <- format(SRP_Temp$Date, "%m/%d/%Y")
#Consolidate the Temperature columns
SRP_Temp <- SRP_Temp %>%
mutate(Temp = coalesce(TObserved, TForecast)) %>%
select(Date, Temp, Station)
#Aggregate Tmax and Tmin by Date and Station
SRP_Temp <- SRP_Temp %>%
group_by(Date, Station) %>%
summarise(Tmin = min(Temp), Tmax = max(Temp))
SRP_Temp
SRP_Temp <- pivot_wider(SRP_Temp, names_from = Station, values_from = c("Tmin", "Tmax"))
col_order_temp <- c("Date", "Tmax_LSEC1", "Tmax_MWEC1", "Tmin_LSEC1", "Tmin_MWEC1")
SRP_Temp <- SRP_Temp2[, col_order_temp]
View(SRP_Temp)
str(sum_SRP)
str(SRP_Temp)
SRP_Temp$Date <- as.Date(SRP_Temp$Date, format ="%m/%d/%Y")
SRP_Processed <- merge(SRP_Temp, sum_SRP, by = "Date")
colnames(SRP_Processed)[5:6]
colnames(SRP_Processed)[6:7]
colnames(SRP_Processed)[6:7] = c("PPT_LSEC1", "PPT_MWEC1")
SRP_Processed[,c(1,6,2,4,3,5,7)]
write.csv(SRP_Processed, here("ProcessedData/CNRFC_SRP_Processed.csv"), row.names = FALSE)
git branch
here()
library(here)
here()
here()
