Water_Rights_Master_Flat_File_Points_of_Diversion <- read.csv(url("http://intapps.waterboards.ca.gov/downloadFile/faces/flatFilesEwrims.xhtml?fileName=ewrims_flat_file_pod.csv"))
library(janitor)
install.packages("janitor")
library(janitor)
distinct(Water_Rights_Master_Flat_File_Points_of_Diversion$WATER_RIGHT_TYPE)
library(dplyr)
dplyr::distinct(Water_Rights_Master_Flat_File_Points_of_Diversion$WATER_RIGHT_STATUS)
distinct(Water_Rights_Master_Flat_File_Points_of_Diversion, WATER_RIGHT_TYPE, .keep_all=TRUE)
> distinct(Water_Rights_Master_Flat_File_Points_of_Diversion, WATER_RIGHT_TYPE, .keep_all=FALSE)
distinct(Water_Rights_Master_Flat_File_Points_of_Diversion, WATER_RIGHT_TYPE, .keep_all=FALSE)
distinct(Water_Rights_Master_Flat_File_Points_of_Diversion, WATER_RIGHT_TYPE, .keep_all=FALSE) %>% arrange()
Flat_File_PODs <- read.csv(url("http://intapps.waterboards.ca.gov/downloadFile/faces/flatFilesEwrims.xhtml?fileName=ewrims_flat_file_pod.csv"))
#Apply the proper filters----
# Run the scripts one chunk at a time to insure that everything is working correctly.
#Install if you do not have in your current packages or are not up to date.----
# install.packages("tidyverse")
# install.packages("readxl")
# install.packages("geosphere")
# install.packages("stringi")
# install.packages("stringr")
# install.packages("pracma")
#Load Packages- This step must be done each time the project is opened. ----
library(tidyverse)
library(dplyr)
#Download POD flat file from Internal URL----
Flat_File_PODs <- read.csv(url("http://intapps.waterboards.ca.gov/downloadFile/faces/flatFilesEwrims.xhtml?fileName=ewrims_flat_file_pod.csv"))
#Apply the proper filters----
Flat_File_PODs_Status <- Flat_File_PODs$POD_STATUS == "Active" , ]
Flat_File_PODs_Status <- Flat_File_PODs[Flat_File_PODs$POD_STATUS == "Active", ]
# Run the scripts one chunk at a time to insure that everything is working correctly. When you become more familiar with the code you can run in larger sections.
#Install if you do not have in your current packages or are not up to date.----
# install.packages("tidyverse")
# install.packages("readxl")
# install.packages("geosphere")
# install.packages("stringi")
# install.packages("stringr")
# install.packages("pracma")
#Load Packages- This step must be done each time the project is opened. ----
library(tidyverse)
library(readxl)
library(geosphere)
library(stringi)
library(stringr)
library(pracma) #required for strcmpi function
#On some laptops/PC's there is not enough memory allotted for calculations.These codes will increase your memory size for R.
#memory.limit()
#memory.limit(size=56000)
############################################################Filtering Flat File for GIS Step ##############################################################################################################
####Download POD flat file from the URL(Public)
##Water_Rights_Master_Flat_File_Points_of_Diversion <- read_csv(url("https://data.ca.gov/dataset/65296e4a-2417-466b-af8c-577f1936ba75/resource/0cf80c6f-3675-43be-b555-8d80ea469d69/download/ewrims_flat_file_pod.csv"))
####Download POD flat file from the URL(Internal DWR)
Water_Rights_Master_Flat_File_Points_of_Diversion <- read.csv(url("http://intapps.waterboards.ca.gov/downloadFile/faces/flatFilesEwrims.xhtml?fileName=ewrims_flat_file_pod.csv"))
#### Make sure that the POD_Status is Active
Water_Rights_Master_Flat_File_Points_of_Diversion_POD_STATUS <- Water_Rights_Master_Flat_File_Points_of_Diversion[Water_Rights_Master_Flat_File_Points_of_Diversion$POD_STATUS == "Active" , ]
####Filter by Water Right Type
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Federal Claims" |
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Federal Stockponds"|
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Registration Cannabis"|
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Registration Domestic"|
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Registration Irrigation"|
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Registration Livestock"|
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Statement of Div and Use"|
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Stockpond"|
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "", ]
Water_Rights_Master_Flat_File_Points_of_Diversion_WATER_RIGHT_TYPE <- Water_Rights_Master_Flat_File_Points_of_Diversion_POD_STATUS[Water_Rights_Master_Flat_File_Points_of_Diversion_POD_STATUS$WATER_RIGHT_TYPE == "Appropriative" |
Water_Rights_Master_Flat_File_Points_of_Diversion_POD_STATUS$WATER_RIGHT_TYPE == "Federal Claims" |
Water_Rights_Master_Flat_File_Points_of_Diversion_POD_STATUS$WATER_RIGHT_TYPE == "Federal Stockponds"|
Water_Rights_Master_Flat_File_Points_of_Diversion_POD_STATUS$WATER_RIGHT_TYPE == "Registration Cannabis"|
Water_Rights_Master_Flat_File_Points_of_Diversion_POD_STATUS$WATER_RIGHT_TYPE == "Registration Domestic"|
Water_Rights_Master_Flat_File_Points_of_Diversion_POD_STATUS$WATER_RIGHT_TYPE == "Registration Irrigation"|
Water_Rights_Master_Flat_File_Points_of_Diversion_POD_STATUS$WATER_RIGHT_TYPE == "Registration Livestock"|
Water_Rights_Master_Flat_File_Points_of_Diversion_POD_STATUS$WATER_RIGHT_TYPE == "Statement of Div and Use"|
Water_Rights_Master_Flat_File_Points_of_Diversion_POD_STATUS$WATER_RIGHT_TYPE == "Stockpond"|
Water_Rights_Master_Flat_File_Points_of_Diversion_POD_STATUS$WATER_RIGHT_TYPE == "", ]
Flat_File_PODS_WR_Type <- Flat_File_PODS_Status[Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Appropriative" |
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Federal Claims" |
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Federal Stockponds" |
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Registration Cannabis" |
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Registration Domestic" |
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Registration Irrigation" |
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Registration Livestock" |
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Statement of Div and Use" |
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Stockpond" |
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "",]
Flat_File_PODS_WR_Type <- Flat_File_PODs_Status[Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Appropriative" |
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Federal Claims" |
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Federal Stockponds" |
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Registration Cannabis" |
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Registration Domestic" |
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Registration Irrigation" |
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Registration Livestock" |
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Statement of Div and Use" |
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "Stockpond" |
Flat_File_PODS_Status$WATER_RIGHT_TYPE == "",]
####Filter by Water Right Type
Flat_File_PODs_WR_Type <- Flat_File_PODs_Status[Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Appropriative" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Federal Claims" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Federal Stockponds" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Registration Cannabis" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Registration Domestic" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Registration Irrigation" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Registration Livestock" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Statement of Div and Use" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Stockpond" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "",]
Flat_File_Final<- Flat_File_PODS_WR_Type[Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Active" |
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Claimed - Local Oversight"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Certified" |
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Claimed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Completed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Licensed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Permitted"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Registered"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "" , ]
Flat_File_Final<- Flat_File_PODs_WR_Type[Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Active" |
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Claimed - Local Oversight"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Certified" |
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Claimed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Completed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Licensed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Permitted"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Registered"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "" , ]
Water_Rights_Master_Flat_File_Points_of_Diversion_Final <- Water_Rights_Master_Flat_File_Points_of_Diversion_WATER_RIGHT_TYPE[Water_Rights_Master_Flat_File_Points_of_Diversion_WATER_RIGHT_TYPE$WATER_RIGHT_STATUS == "Active" |
Water_Rights_Master_Flat_File_Points_of_Diversion_WATER_RIGHT_TYPE$WATER_RIGHT_STATUS == "Claimed - Local Oversight"|
Water_Rights_Master_Flat_File_Points_of_Diversion_WATER_RIGHT_TYPE$WATER_RIGHT_STATUS == "Certified" |
Water_Rights_Master_Flat_File_Points_of_Diversion_WATER_RIGHT_TYPE$WATER_RIGHT_STATUS == "Claimed"|
Water_Rights_Master_Flat_File_Points_of_Diversion_WATER_RIGHT_TYPE$WATER_RIGHT_STATUS == "Completed"|
Water_Rights_Master_Flat_File_Points_of_Diversion_WATER_RIGHT_TYPE$WATER_RIGHT_STATUS == "Licensed"|
Water_Rights_Master_Flat_File_Points_of_Diversion_WATER_RIGHT_TYPE$WATER_RIGHT_STATUS == "Permitted"|
Water_Rights_Master_Flat_File_Points_of_Diversion_WATER_RIGHT_TYPE$WATER_RIGHT_STATUS == "Registered"|
Water_Rights_Master_Flat_File_Points_of_Diversion_WATER_RIGHT_TYPE$WATER_RIGHT_STATUS == "" , ]
####Filter by Water Right Status
Flat_File_eWRIMS<- Flat_File_PODs_WR_Type[Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Active" |
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Claimed - Local Oversight"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Certified" |
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Claimed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Completed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Licensed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Permitted"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Registered"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "" , ]
WR_Types <- unique.data.frame(Flat_File_PODs$WATER_RIGHT_TYPE)
WR_Types <- unique(Flat_File_PODs$WATER_RIGHT_TYPE)
WR_Types <- unique(Flat_File_PODs$WATER_RIGHT_TYPE) %>%data.frame()
WR_Types
WR_Types <- unique(Flat_File_PODs$WATER_RIGHT_TYPE) %>%data.frame() %>% arrange
WR_Types
View(WR_Types)
WR_Types <- unique(Flat_File_PODs$WATER_RIGHT_TYPE) #grabs unique values
%>%data.frame() #converts to dataframe
WR_Types <- unique(Flat_File_PODs$WATER_RIGHT_TYPE) #grabs unique values
%>%data.frame() #converts to dataframe
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique() %>%
data.frame() %>%
trimws() %>%
arrange()
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique() %>%
data.frame() %>%
trimws() %>%
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique() %>%
# Run the scripts one chunk at a time to insure that everything is working correctly.
#Install if you do not have in your current packages or are not up to date.----
#install.packages("tidyverse")
#install.packages("dplyr")
#Load Packages- This step must be done each time the project is opened. ----
library(tidyverse)
# Run the scripts one chunk at a time to insure that everything is working correctly.
#Install if you do not have in your current packages or are not up to date.----
#install.packages("tidyverse")
#install.packages("dplyr")
#Load Packages- This step must be done each time the project is opened. ----
library(tidyverse)
library(dplyr)
#Download POD flat file from Internal URL----
Flat_File_PODs <- read.csv(url("http://intapps.waterboards.ca.gov/downloadFile/faces/flatFilesEwrims.xhtml?fileName=ewrims_flat_file_pod.csv"))
#Apply the proper filters----
##Filter for Active PODs----
Flat_File_PODs_Status <- Flat_File_PODs[Flat_File_PODs$POD_STATUS == "Active", ]
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique() %>%
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique()
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique() %>%
data.frame() %>%
trimws() %>%
arrange()
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique() %>%
data.frame() %>%
trimws() %>%
sort() %>%
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique() %>%
data.frame() %>%
trimws() %>%
sort() %>%
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique() %>%
trimws() %>%
sort() %>%
data.frame()
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique()
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique() %>%
trimws()
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique()
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique()
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE
library(tidyverse)
library(dplyr)
#Download POD flat file from Internal URL----
Flat_File_PODs <- read.csv(url("http://intapps.waterboards.ca.gov/downloadFile/faces/flatFilesEwrims.xhtml?fileName=ewrims_flat_file_pod.csv"))
#Apply the proper filters----
##Filter for Active PODs----
Flat_File_PODs_Status <- Flat_File_PODs[Flat_File_PODs$POD_STATUS == "Active", ]
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique() %>%
trimws() %>%
sort() %>%
data.frame()
WR_Types #print values
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique() %>% #extracts unique values
trimws() %>% #removes leading and lagging spaces
sort() %>%  #sorts alphabetically
data.frame()%>% #converts the dataset into a dataframe
colnames() = "WR_Types" #Assigns the column name WR_Types
View(WR_Types)
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique() %>% #extracts unique values
trimws() %>% #removes leading and lagging spaces
sort() %>%  #sorts alphabetically
data.frame() %>% #converts the dataset into a dataframe
colnames() = "WR_Types" #Assigns the column name WR_Types
colnames(WR_Types) = c("WR_Types")
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique() %>% #extracts unique values
trimws() %>% #removes leading and lagging spaces
sort() %>%  #sorts alphabetically
data.frame() %>% #converts the dataset into a dataframe
colnames = c("WR_Types")
WR_Types #print values
WR_Statuses <- Flat_File_PODs$WATER_RIGHT_STATUS %>%
unique() %>% #Extracts unique values
trimsws() %>% #Removes leading and lagging spaces
sort() %>%  #sorts alphabetically
data.frame() %>% #converts the dataset into a dataframe
colnames = c("WR_Statuses") #Assigns the column name "WR_Statuses"
WR_Statuses <- Flat_File_PODs$WATER_RIGHT_STATUS %>%
unique() %>% #Extracts unique values
trimsws() %>% #Removes leading and lagging spaces
sort() %>%  #sorts alphabetically
data.frame() %>% #converts the dataset into a dataframe
colnames = c("WR_Statuses") #Assigns the column name "WR_Statuses"
WR_Statuses <- Flat_File_PODs$WATER_RIGHT_STATUS
WR_Statuses <- Flat_File_PODs$WATER_RIGHT_STATUS %>%
unique()
WR_Statuses <- Flat_File_PODs$WATER_RIGHT_STATUS %>%
unique() %>% #Extracts unique values
trimws() %>% #
WR_Statuses <- Flat_File_PODs$WATER_RIGHT_STATUS %>%
unique() %>% #Extracts unique values
trimws()
WR_Statuses <- Flat_File_PODs$WATER_RIGHT_STATUS %>%
unique() %>% #Extracts unique values
trimws() %>% #Removes leading and lagging spaces
sort()
WR_Statuses <- Flat_File_PODs$WATER_RIGHT_STATUS %>%
unique() %>% #Extracts unique values
trimws() %>% #Removes leading and lagging spaces
sort() %>%  #sorts alphabetically
data.frame()
WR_Statuses <- Flat_File_PODs$WATER_RIGHT_STATUS %>%
unique() %>% #Extracts unique values
trimws() %>% #Removes leading and lagging spaces
sort() %>%  #sorts alphabetically
data.frame() %>% #converts the dataset into a dataframe
colnames = c("WR_Statuses")
View(WR_Types)
View(WR_Statuses)
WR_Statuses #print values
colnames(Flat_File_PODs_Status)
colnames(Flat_File_PODs) %>% sort()
WR_Fields <- c("APPL_ID","APPLICATION_NUMBER","CERTIFICATE_ID","COUNTY","EAST_COORD","HUC_12_NAME","HUC_12_NUMBER",
"HUC_8_NAME","HUC_8_NUMBER","LATITUDE","LICENSE_ID","LOCATION_METHOD","LONGITUDE","MERIDIAN","NORTH_COORD",
"OBJECTID","PARCEL_NUMBER","PERMIT_ID","POD_COUNT","POD_ID","POD_LAST_UPDATE_DATE","POD_NUMBER",
"POD_NUMBER_GIS","POD_STATUS","POD_TYPE","QUAD_MAP_NAME","QUAD_MAP_NUMBER","QUARTER","QUARTER-QUARTER",
"RANGE_DIRECTION","RANGE_NUMBER","SECTION_CLASSIFIER","SECTION_NUMBER","SOURCE_NAME","SP_ZONE",
"SPECIAL_USE_AREA","TOWNSHIP_DIRECTION","TOWNSHIP_NUMBER","TRIB_DESC","WATER_RIGHT_STATUS",
"WATER_RIGHT_TYPE","WATERSHED","WR_WATER_RIGHT_ID")
Flat_File_eWRIMS[,WR_Fields$names]
Flat_File_eWRIMS<- Flat_File_PODs_WR_Type[Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Active" |
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Claimed - Local Oversight"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Certified" |
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Claimed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Completed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Licensed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Permitted"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Registered"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "" , ]
# Run the scripts one chunk at a time to insure that everything is working correctly.
#Install if you do not have in your current packages or are not up to date.----
#install.packages("tidyverse")
#install.packages("dplyr")
#Load Packages- This step must be done each time the project is opened. ----
library(tidyverse)
library(dplyr)
#Download POD flat file from Internal URL----
Flat_File_PODs <- read.csv(url("http://intapps.waterboards.ca.gov/downloadFile/faces/flatFilesEwrims.xhtml?fileName=ewrims_flat_file_pod.csv"))
#Apply the proper filters----
##Filter for Active PODs----
Flat_File_PODs_Status <- Flat_File_PODs[Flat_File_PODs$POD_STATUS == "Active", ]
##Get unique water right types----
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique() %>% #extracts unique values
trimws() %>% #removes leading and lagging spaces
sort() %>%  #sorts alphabetically
data.frame() %>% #converts the dataset into a dataframe
colnames = c("WR_Types") #Assigns the column name "WR_Types"
Flat_File_PODs_WR_Type <- Flat_File_PODs_Status[Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Appropriative" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Federal Claims" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Federal Stockponds" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Registration Cannabis" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Registration Domestic" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Registration Irrigation" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Registration Livestock" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Statement of Div and Use" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Stockpond" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "",]
Flat_File_eWRIMS<- Flat_File_PODs_WR_Type[Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Active" |
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Claimed - Local Oversight"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Certified" |
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Claimed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Completed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Licensed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Permitted"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Registered"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "" , ]
WR_Fields <- c("APPL_ID","APPLICATION_NUMBER","CERTIFICATE_ID","COUNTY","EAST_COORD","HUC_12_NAME","HUC_12_NUMBER",
"HUC_8_NAME","HUC_8_NUMBER","LATITUDE","LICENSE_ID","LOCATION_METHOD","LONGITUDE","MERIDIAN","NORTH_COORD",
"OBJECTID","PARCEL_NUMBER","PERMIT_ID","POD_COUNT","POD_ID","POD_LAST_UPDATE_DATE","POD_NUMBER",
"POD_NUMBER_GIS","POD_STATUS","POD_TYPE","QUAD_MAP_NAME","QUAD_MAP_NUMBER","QUARTER","QUARTER-QUARTER",
"RANGE_DIRECTION","RANGE_NUMBER","SECTION_CLASSIFIER","SECTION_NUMBER","SOURCE_NAME","SP_ZONE",
"SPECIAL_USE_AREA","TOWNSHIP_DIRECTION","TOWNSHIP_NUMBER","TRIB_DESC","WATER_RIGHT_STATUS",
"WATER_RIGHT_TYPE","WATERSHED","WR_WATER_RIGHT_ID") %>% data.frame()
Flat_File_eWRIMS <-Flat_File_eWRIMS[,WR_Fields$names]
# Run the scripts one chunk at a time to insure that everything is working correctly.
#Install if you do not have in your current packages or are not up to date.----
#install.packages("tidyverse")
#install.packages("dplyr")
#Load Packages- This step must be done each time the project is opened. ----
library(tidyverse)
library(dplyr)
#Download POD flat file from Internal URL----
Flat_File_PODs <- read.csv(url("http://intapps.waterboards.ca.gov/downloadFile/faces/flatFilesEwrims.xhtml?fileName=ewrims_flat_file_pod.csv"))
#Apply the proper filters----
##Filter for Active PODs----
Flat_File_PODs_Status <- Flat_File_PODs[Flat_File_PODs$POD_STATUS == "Active", ]
##Get unique water right types----
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique() %>% #extracts unique values
trimws() %>% #removes leading and lagging spaces
sort() %>%  #sorts alphabetically
data.frame() %>% #converts the dataset into a dataframe
colnames = c("WR_Types") #Assigns the column name "WR_Types"
library(tidyverse)
library(dplyr)
#Download POD flat file from Internal URL----
Flat_File_PODs <- read.csv(url("http://intapps.waterboards.ca.gov/downloadFile/faces/flatFilesEwrims.xhtml?fileName=ewrims_flat_file_pod.csv"))
#Apply the proper filters----
##Filter for Active PODs----
Flat_File_PODs_Status <- Flat_File_PODs[Flat_File_PODs$POD_STATUS == "Active", ]
##Get unique water right types----
WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
unique() %>% #extracts unique values
trimws() %>% #removes leading and lagging spaces
sort() %>%  #sorts alphabetically
data.frame() %>% #converts the dataset into a dataframe
colnames = c("WR_Types") #Assigns the column name "WR_Types"
Flat_File_PODs <- read.csv(url("http://intapps.waterboards.ca.gov/downloadFile/faces/flatFilesEwrims.xhtml?fileName=ewrims_flat_file_pod.csv"))
#Apply the proper filters----
##Filter for Active PODs----
Flat_File_PODs_Status <- Flat_File_PODs[Flat_File_PODs$POD_STATUS == "Active", ]
##Get unique water right types----
# WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
#   unique() %>% #extracts unique values
#   trimws() %>% #removes leading and lagging spaces
#   sort() %>%  #sorts alphabetically
#   data.frame() %>% #converts the dataset into a dataframe
#   colnames = c("WR_Types") #Assigns the column name "WR_Types"
# WR_Types #print values
#Water Right Types we ignore:
# Adjudicated
# Appropriative (State Filing)
# Cert of Right - Power
# Groundwater Recordation
# Non Jurisdictional
# Not Determined
# Section 12 File
# Temporary Permit
# Waste Water Change
##Filter by Water Right Type----
Flat_File_PODs_WR_Type <- Flat_File_PODs_Status[Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Appropriative" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Federal Claims" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Federal Stockponds" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Registration Cannabis" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Registration Domestic" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Registration Irrigation" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Registration Livestock" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Statement of Div and Use" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Stockpond" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "",]
Flat_File_eWRIMS<- Flat_File_PODs_WR_Type[Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Active" |
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Claimed - Local Oversight"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Certified" |
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Claimed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Completed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Licensed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Permitted"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Registered"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "" , ]
WR_Fields <- c("APPL_ID","APPLICATION_NUMBER","CERTIFICATE_ID","COUNTY","EAST_COORD","HUC_12_NAME","HUC_12_NUMBER",
"HUC_8_NAME","HUC_8_NUMBER","LATITUDE","LICENSE_ID","LOCATION_METHOD","LONGITUDE","MERIDIAN","NORTH_COORD",
"OBJECTID","PARCEL_NUMBER","PERMIT_ID","POD_COUNT","POD_ID","POD_LAST_UPDATE_DATE","POD_NUMBER",
"POD_NUMBER_GIS","POD_STATUS","POD_TYPE","QUAD_MAP_NAME","QUAD_MAP_NUMBER","QUARTER","QUARTER-QUARTER",
"RANGE_DIRECTION","RANGE_NUMBER","SECTION_CLASSIFIER","SECTION_NUMBER","SOURCE_NAME","SP_ZONE",
"SPECIAL_USE_AREA","TOWNSHIP_DIRECTION","TOWNSHIP_NUMBER","TRIB_DESC","WATER_RIGHT_STATUS",
"WATER_RIGHT_TYPE","WATERSHED","WR_WATER_RIGHT_ID") %>% data.frame()
Flat_File_eWRIMS <-Flat_File_eWRIMS[,WR_Fields$names]
cols_to_keep <- c("APPL_ID", "APPLICATION_NUMBER", "CERTIFICATE_ID", "COUNTY", "EAST_COORD", "HUC_12_NAME", "HUC_12_NUMBER",
"HUC_8_NAME", "HUC_8_NUMBER", "LATITUDE", "LICENSE_ID", "LOCATION_METHOD", "LONGITUDE", "MERIDIAN", "NORTH_COORD",
"OBJECTID", "PARCEL_NUMBER", "PERMIT_ID", "POD_COUNT", "POD_ID", "POD_LAST_UPDATE_DATE", "POD_NUMBER",
"POD_NUMBER_GIS", "POD_STATUS", "POD_TYPE", "QUAD_MAP_NAME", "QUAD_MAP_NUMBER", "QUARTER", "QUARTER_QUARTER",
"RANGE_DIRECTION", "RANGE_NUMBER", "SECTION_CLASSIFIER", "SECTION_NUMBER", "SOURCE_NAME", "SP_ZONE",
"SPECIAL_USE_AREA", "TOWNSHIP_DIRECTION", "TOWNSHIP_NUMBER", "TRIB_DESC", "WATER_RIGHT_STATUS",
"WATER_RIGHT_TYPE", "WATERSHED", "WR_WATER_RIGHT_ID")
Flat_File_eWRIMS <- Flat_File_eWRIMS[, cols_to_keep, drop = FALSE]
library(tidyverse)
library(dplyr)
#Download POD flat file from Internal URL----
Flat_File_PODs <- read.csv(url("http://intapps.waterboards.ca.gov/downloadFile/faces/flatFilesEwrims.xhtml?fileName=ewrims_flat_file_pod.csv"))
#Apply the proper filters----
##Filter for Active PODs----
Flat_File_PODs_Status <- Flat_File_PODs[Flat_File_PODs$POD_STATUS == "Active", ]
##Get unique water right types----
# WR_Types <- Flat_File_PODs$WATER_RIGHT_TYPE %>%
#   unique() %>% #extracts unique values
#   trimws() %>% #removes leading and lagging spaces
#   sort() %>%  #sorts alphabetically
#   data.frame() %>% #converts the dataset into a dataframe
#   colnames = c("WR_Types") #Assigns the column name "WR_Types"
# WR_Types #print values
#Water Right Types we ignore:
# Adjudicated
# Appropriative (State Filing)
# Cert of Right - Power
# Groundwater Recordation
# Non Jurisdictional
# Not Determined
# Section 12 File
# Temporary Permit
# Waste Water Change
##Filter by Water Right Type----
Flat_File_PODs_WR_Type <- Flat_File_PODs_Status[Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Appropriative" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Federal Claims" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Federal Stockponds" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Registration Cannabis" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Registration Domestic" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Registration Irrigation" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Registration Livestock" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Statement of Div and Use" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "Stockpond" |
Flat_File_PODs_Status$WATER_RIGHT_TYPE == "",]
##Get List of Water Right Statuses----
# WR_Statuses <- Flat_File_PODs$WATER_RIGHT_STATUS %>%
#   unique() %>% #Extracts unique values
#   trimws() %>% #Removes leading and lagging spaces
#   sort() %>%  #sorts alphabetically
#   data.frame() %>% #converts the dataset into a dataframe
#   colnames = c("WR_Statuses") #Assigns the column name "WR_Statuses"
#WR_Statuses #print values
##Filter by Water Right Status----
Flat_File_eWRIMS<- Flat_File_PODs_WR_Type[Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Active" |
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Claimed - Local Oversight"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Certified" |
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Claimed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Completed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Licensed"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Permitted"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "Registered"|
Flat_File_PODs_WR_Type$WATER_RIGHT_STATUS == "" , ]
##Remove unnecessary columns
cols_to_keep <- c("APPL_ID", "APPLICATION_NUMBER", "CERTIFICATE_ID", "COUNTY", "EAST_COORD", "HUC_12_NAME", "HUC_12_NUMBER",
"HUC_8_NAME", "HUC_8_NUMBER", "LATITUDE", "LICENSE_ID", "LOCATION_METHOD", "LONGITUDE", "MERIDIAN", "NORTH_COORD",
"OBJECTID", "PARCEL_NUMBER", "PERMIT_ID", "POD_COUNT", "POD_ID", "POD_LAST_UPDATE_DATE", "POD_NUMBER",
"POD_NUMBER_GIS", "POD_STATUS", "POD_TYPE", "QUAD_MAP_NAME", "QUAD_MAP_NUMBER", "QUARTER", "QUARTER_QUARTER",
"RANGE_DIRECTION", "RANGE_NUMBER", "SECTION_CLASSIFIER", "SECTION_NUMBER", "SOURCE_NAME", "SP_ZONE",
"SPECIAL_USE_AREA", "TOWNSHIP_DIRECTION", "TOWNSHIP_NUMBER", "TRIB_DESC", "WATER_RIGHT_STATUS",
"WATER_RIGHT_TYPE", "WATERSHED", "WR_WATER_RIGHT_ID")
Flat_File_eWRIMS <- Flat_File_eWRIMS[, cols_to_keep, drop = FALSE]
write.csv(Flat_File_eWRIMS,"OutputData\\Flat_File_eWRIMS_2023-06-16", row.names = FALSE)
write.csv(Flat_File_eWRIMS,"OutputData\\Flat_File_eWRIMS_2023-06-16.csv", row.names = FALSE)
